using Akka.Actor;
using EY.SSA.CommonBusinessLogic.Messages.Requests;
using EY.SSA.CommonBusinessLogic.Messages.Response;

namespace EY.SSA.CommonBusinessLogic.Messages.Events
{
    /// <summary>
    /// This message is sent in response to an actor subscribed to receive any supervisory events generated by the SupervisorRegistryActor.
    /// </summary>
    public class SubscribedForSupervisorEvents : Subscribed
    {
        public SubscribedForSupervisorEvents(string subscriberActorType, string subscriberActorId, IActorRef subscriberActorRef)
            : base(subscriberActorType, subscriberActorId, subscriberActorRef)
        {

        }
    }

    /// <summary>
    /// This message is sent in response to a supervisor requesting to be registered with the SupervisorRegistryActor.
    /// </summary>
    public class SupervisorRegistrationEvent
    {
        public SupervisorRegistrationEvent(RegisterSupervisor rs, bool registered)
        {
            RegisteredSupervisor = rs;
            Registered = registered;
        }

        public RegisterSupervisor RegisteredSupervisor { get; private set; }

        public bool Registered { get; private set; }
    }

    /// <summary>
    /// This event message is sent in response to a request for the list of supervisors from the SupervisorRegistryActor.
    /// </summary>
    public class SupervisorRegistryGetListEvent
    {
        public SupervisorRegistryGetListEvent(SupervisorRegistryGetListRequest requestGetList, SupervisorRegistryGetListResponse responseGetList, bool success)
        {
            GetListRequest = requestGetList;
            ResponseGetList = responseGetList;
            Success = success;

        }

        public SupervisorRegistryGetListRequest GetListRequest { get; private set; }

        public bool Success { get; private set; }

        public SupervisorRegistryGetListResponse ResponseGetList { get; private set; }
    }

    /// <summary>
    /// This event message is sent in response to the RegistrySupervisor becoming available.
    /// </summary>
    public class SupervisorRegistryReady
    {
        public IActorRef RegistrySupervisorActorRef{ get; private set; }

        public SupervisorRegistryReady(IActorRef registrySupervisorActorRef)
        {
            RegistrySupervisorActorRef = registrySupervisorActorRef;
        }

        public SupervisorRegistryReady()
        {
        }
    }

}
